def modVersion='1.7.10-1.0.3.1'
def modName='OreCoreMin'

buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        } 
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT' 
    }
}

apply plugin: 'maven-publish'

publishing {

    publications {
        maven(MavenPublication) {
        	groupId 'ca.bradj'
        	artifactId 'OreCoreMin'
        	version modVersion
            from components.java
            artifacts=['build/libs/OreCoreMin-'+modVersion+'.jar']
        }
    }
    repositories {
        maven {
            url "http://bradj.ca:8081/nexus/content/repositories/releases"
            credentials {
                username 'bradsk88'
                password 'KZz*6VvU4I7@'
            }
        }
    }
}

apply plugin: 'forge'

version = modVersion
group= "ca.bradj.orecoremin" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "OreCoreMin"

minecraft {
    version = "1.7.10-10.13.2.1230"
    runDir = "eclipse"
}

repositories {
	maven {
        name 'BradJ'
        url 'http://bradj.ca:8081/nexus/content/repositories/snapshots'
 	}
	maven {
        name 'BradJ'
        url 'http://bradj.ca:8081/nexus/content/repositories/releases'
 	}
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies { 
	shade 'ca.bradj:Forge:1.7.10-1.0.2'
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)){
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

minecraft {
    srgExtra "PK: ca/bradj/forge ca/bradj/orecoremin/forge"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
